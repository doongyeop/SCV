spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect

  jwt:
    token:
      access:
        name: ${JWT_ACCESS_NAME}
        secret-key: ${JWT_ACCESS_KEY}
        expiration: ${JWT_ACCESS_EXPIRATION}  # (단위: 초 / 현재 1시간)
      refresh:
        name: ${JWT_REFRESH_NAME}
        secret-key: ${JWT_REFRESH_KEY}
        expiration: ${JWT_REFRESH_EXPIRATION}  # (단위: 초 / 현재 2주)

  security:
    oauth2:
      client:
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize?prompt=select_account
        registration:
          github:
            client-id: ${OAUTH_CLIENT_ID}
            client-secret: ${OAUTH_CLIENT_SECRET}
            scope: user:email, repo, contents, metadata
            redirect-uri: ${OAUTH_REDIRECT_URI}
    user:
      name: actuator
      password: ${ACTUATOR_PASSWORD}

  data:
    redis:
      token:
        access:
          master:
            host: ${REDIS_ACCESS_MASTER_HOST}
            port: ${REDIS_ACCESS_MASTER_PORT}
            password: ${REDIS_ACCESS_MASTER_PASSWORD}
          slaves:
            - host: ${REDIS_ACCESS_SLAVE1_HOST}
              port: ${REDIS_ACCESS_SLAVE1_PORT}
              password: ${REDIS_ACCESS_SLAVE1_PASSWORD}
            - host: ${REDIS_ACCESS_SLAVE2_HOST}
              port: ${REDIS_ACCESS_SLAVE2_PORT}
              password: ${REDIS_ACCESS_SLAVE2_PASSWORD}
            - host: ${REDIS_ACCESS_SLAVE3_HOST}
              port: ${REDIS_ACCESS_SLAVE3_PORT}
              password: ${REDIS_ACCESS_SLAVE3_PASSWORD}
        refresh:
          host: ${REDIS_REFRESH_MASTER_HOST}
          port: ${REDIS_REFRESH_MASTER_PORT}
          password: ${REDIS_REFRESH_MASTER_PASSWORD}

  fastapi:
    train:
      host: ${FAST_MODEL_TRAIN_HOST_NAME}
      port: ${FAST_MODEL_TRAIN_PORT}
    test:
      host: ${FAST_MODEL_TEST_HOST_NAME}
      port: ${FAST_MODEL_TEST_PORT}

# actuator health 체크 설정
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true  # k8s 프로브 활성화
    info:
      enabled: true
  info:
    env:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true